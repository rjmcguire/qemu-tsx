* NB Don't confuse QEMU's 'trace' features with mtrace.

* Cache line tracking

  When cache line tracking is enabled (the default) a memory access is
  reported only when an access might cause inter-core traffic.
  Specifically:
  
  * On read -- a cache line that was written to by another core
    since that last read from the reading core.
  * On write -- a cache line that was read from or written to by
    another core since the last write from the writing core.

  There is no other cache simulation (i.e. caches are fully
  associative and have infinite capacity).

* QEMU calls

  Guest code can call into qemu to turn mtracing on or off,
  communicate object instances and types, etc.  See mtrace-magic.h and
  mtrace-file.h for the current API and the scale-linux 'mtrace'
  branch and mosbench/micro directory for example usuages.

* Configue options

  ./configure --prefix=PFX \
	    --target-list="x86_64-softmmu" \
	    --disable-kvm  \
	    --audio-card-list="" \
	    --disable-vnc-jpeg \
	    --disable-vnc-png \
	    --disable-strip

* Implementation choices
  
  If we don't want the virtual address, we could modify the macros in
  cpu-all.h (stl_p, ...).  We would still need the changes to the
  x86 code gen. in tcg/i386/tcg_target.c

* TODO

  - Move all mtrace* decls. to mtrace.h
